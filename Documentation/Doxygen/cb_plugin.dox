/**
\page cb_plugin Callback Plugins
A Callback plugin is a special type of plugin that extends FEBio's callback mechanism to the plugin framework. Callbacks are useful because they allow developers
to interact with the internals of the code. Something that otherwise would require changing the source code directly. FEBio uses callbacks for updating the shell window title and for checking for user interrupts (ctrl+c). Developers can now use the Callback plugin to define additional callbacks via the plugin mechanism.

\section cb_base The FECallback Class
The base class for defining callback plugins, is the FECallback class (defined in FECore\FECallback.h). The constructor of the base class takes a pointer to an FEModel
and a parameter that defines when the callback should be called. The possible values are:

\li <b>CB_INIT</b>: Calls the callback after initialization, but before the solve phase.
\li <b>CB_MAJOR_ITERS</b>: Calls the callback after each converged time step.
\li <b>CB_MINOR_ITERS</b>: Calls the callback after each quasi-Newton iteration.
\li <b>CB_ALWAYS</b>: Calls the callback during all events defined above.

These parameters can be cominbed using a binary or operator (e.g. CB_INIT | CB_MAJOR_ITERS).

The base class defines an abstract member, FECallback::Execute, which needs to be overridden by the derived class. This is the function that will be called by FEBio.

\section cb_create Creating an Callback Plugin
The first step in creating a callback plugin is deriving a new class from FECallback and defining the Execute member.

\code
class MyCallback : public FECallback
{
public:
	MyCallback(FEModel* pfem) : FECallback(pfem, CB_ALWAYS){}
	
	void Execute(FEModel& fem, unsigned int nreason);
};
\endcode

The constructor of the derived class calls the base class constructor with the pointer to the FEModel class and the events for which the callbacks wants to be called. 

The Execute member is then called when the events occur for which the callback was registered. Inside this function, a developer can implement any additional functionality. 
*/
